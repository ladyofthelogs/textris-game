@import url('https://fonts.googleapis.com/css2?family=Oxanium:wght@400;700&family=Rubik+Iso&display=swap');

@tailwind base;
@tailwind components;
@tailwind utilities;

body {
  margin: 0;
  font-family: 'Oxanium', sans-serif;
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
  color: #1f2937; /* Dark gray text for better readability */
  background-color: #f3f4f6; /* Light gray background */
}

/* Styles from root global.css */
.game-container {
  position: relative; /* Added for positioning of overlay */
  display: flex;
  flex-direction: column;
  align-items: center;
  padding: 20px;
  background-color: #e0f2f7; /* Muted monochromatic light blue */
  min-height: 100vh;
  box-sizing: border-box;
}

.game-container h1 {
  font-family: 'Rubik Iso', cursive;
  font-size: 4em; /* Adjust as needed */
  color: #007bff; /* Example color */
  text-shadow: 3px 3px 5px rgba(0, 0, 0, 0.3);
  margin-bottom: 20px;
}

.game-info-top {
  display: flex;
  justify-content: space-between;
  align-items: center; /* Align items vertically in the center */
  width: 100%;
  max-width: 320px; /* Adjust based on grid size */
  margin-bottom: 10px;
  padding: 0 20px; /* Padding for the whole screen */
  font-weight: bold;
  color: #007bff; /* Blue color for time display */
  font-size: 1.5em; /* Set font size for time display */
}

.score-display-main {
  text-align: center;
  font-size: 3em; /* Same as h1 */
  font-weight: bold;
  margin-right: 20px; /* Space between score and time */
}

.score-animation {
  animation: scorePop 0.3s ease-out forwards, scoreFlash 0.6s ease-out forwards;
}

@keyframes scorePop {
  0% {
    transform: scale(1);
    color: #007bff;
  }
  50% {
    transform: scale(1.2);
    color: #28a745; /* Green for positive change */
  }
  100% {
    transform: scale(1);
    color: #007bff;
  }
}

@keyframes scoreFlash {
  0% {
    opacity: 1;
  }
  25% {
    opacity: 0.5;
  }
  50% {
    opacity: 1;
  }
  75% {
    opacity: 0.5;
  }
  100% {
    opacity: 1;
  }
}

.game-grid {
  display: grid;
  grid-template-columns: repeat(8, 40px); /* 8x8 grid, adjust cell size as needed */
  grid-template-rows: repeat(8, 40px);
  border: 2px solid #64b5f6; /* A darker shade of light blue */
  background-color: #bbdefb; /* Lighter shade for grid background */
  width: 320px; /* 8 * 40px */
  height: 320px; /* 8 * 40px */
  margin-bottom: 20px;
  box-shadow: 0 4px 8px rgba(0, 0, 0, 0.2);
}

.grid-cell {
  width: 40px;
  height: 40px;
  border: 1px solid #90caf9; /* Even lighter border for cells */
  box-sizing: border-box;
  display: flex;
  justify-content: center;
  align-items: center;
  font-size: 1.5em;
  font-weight: bold;
  color: #212121; /* Dark color for letters */
  background-color: #e3f2fd; /* Very light blue for empty cells */
}

.ghost-cell {
  background-color: #ff00ff; /* Magenta for ghost cells */
  opacity: 0.6;
}

.upcoming-shapes {
  display: flex;
  flex-direction: column;
  align-items: center;
  margin-top: 20px;
  margin-bottom: 20px; /* Add margin-bottom to create consistent spacing */
  background-color: transparent; /* Remove debug background */
  border: 2px solid #64b5f6; /* Add a blue border, same as grid */
  padding: 10px; /* Add some padding inside the border */
  border-radius: 8px; /* Slightly rounded corners */
  width: 320px; /* Set width to match grid */
  box-sizing: border-box; /* Include padding and border in the element's total width and height */
}

.upcoming-shapes h2 {
  margin-bottom: 10px;
  color: #424242;
  font-size: 1.5em; /* Set font size to match time display */
}

.shape-preview-container {
  display: flex;
  /* Remove gap for debugging */
  background-color: transparent; /* Remove yellow background */
  padding: 0; /* Remove padding */
  width: 320px; /* Set to grid width */
  justify-content: space-around; /* Distribute shapes evenly */
}

.shape-preview {
  /* Make it a simple block container */
  border: none; /* Remove border */
  background-color: transparent; /* Remove background */
  padding: 0; /* Remove padding */
  width: 80px; /* Set a fixed width for each preview to maintain consistent bounding box */
  height: 80px; /* Set a fixed height for each preview */
  display: flex;
  justify-content: center;
  align-items: center;
  transition: width 0.1s ease-out, height 0.1s ease-out; /* Add transition for smoother scaling */
}


.shape-grid {
  display: grid;
  /* grid-template-columns will be set dynamically by React based on shape dimensions */
}

.shape-row {
  /* Remove flex display, let shape-grid handle layout */
}

.shape-cell {
  width: 20px;
  height: 20px;
  border: 1px solid #90caf9;
  box-sizing: border-box;
  background-color: #e3f2fd;
  display: flex;
  justify-content: center;
  align-items: center;
  font-size: 0.8em;
  font-weight: bold;
  color: #212121;
  box-shadow: inset 0 0 3px rgba(0, 0, 0, 0.2); /* Re-add inner shadow for depth */
  transition: width 0.1s ease-out, height 0.1s ease-out, font-size 0.1s ease-out; /* Add transition for smoother scaling */
}

.hidden-cell {
  background-color: transparent;
  border: 1px solid transparent;
  box-shadow: none;
}

.placeholder-cell {
  background-color: #d3d3d3; /* Light gray fill */
  border: 1px solid #a9a9a9; /* Slightly darker gray border */
  color: transparent; /* Hide letters */
  box-shadow: inset 0 0 3px rgba(0, 0, 0, 0.1);
}

.shape-preview.is-dragged .shape-cell {
  width: 40px;
  height: 40px;
  font-size: 1.5em; /* Same as grid-cell font size */
  background-color: transparent;
  border: 1px solid transparent;
  box-shadow: none;
}

.clearing-cell {
  background-color: #ffeb3b; /* Yellow highlight */
  border: 2px solid #f57f17; /* Orange outline */
  animation: fadeOutAndShrink 0.3s forwards; /* Apply animation */
}

@keyframes fadeOutAndShrink {
  from {
    opacity: 1;
    transform: scale(1);
  }
  to {
    opacity: 0;
    transform: scale(0.8); /* Slightly shrink as it fades */
  }
}

.hide-original-shape {
  opacity: 0;
}

.game-over-overlay {
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  display: flex;
  flex-direction: column;
  justify-content: center;
  align-items: center;
  background-color: rgba(0, 0, 0, 0.7); /* Dimming effect */
  z-index: 10; /* Ensure it's on top of other content */
  color: white;
  font-size: 2em;
  text-align: center;
  /* Removed border-radius as it's not needed for a full-screen overlay */
}

.game-over-overlay .game-over-message,
.game-over-overlay button {
  transform: translateY(-100px); /* Move content up by 100px */
}

.game-over-message {
  margin-bottom: 20px;
  font-size: 1.5em;
  font-weight: bold;
}

.game-over-overlay button,
.restart-button {
  padding: 10px 20px;
  font-size: 1em;
  cursor: pointer;
  background-color: #007bff;
  color: white;
  border: none;
  border-radius: 5px;
  transition: background-color 0.3s ease;
  font-family: 'Oxanium', sans-serif; /* Apply Oxanium to buttons */
}

.restart-button {
  margin-top: 0; /* Remove the margin-top from the restart button */
}

.game-over-overlay button:hover {
  background-color: #0056b3;
}

.game-container.dimmed > *:not(.game-over-overlay) {
  filter: brightness(0.5); /* Dims the content */
  pointer-events: none; /* Disables interaction with dimmed elements */
}

.restart-button {
  margin-top: 20px; /* Add margin to match spacing */
}

.restart-button:hover {
  background-color: #0056b3;
}

.nyan-cat-container {
  position: fixed;
  top: 50%;
  left: -200px; /* Start off-screen to the left */
  transform: translateY(-50%);
  z-index: 100;
  transition: left 2.5s linear; /* Animation duration */
}

.nyan-cat-container.left-to-right {
  left: 100vw; /* End off-screen to the right */
}

.nyan-cat-container.right-to-left {
  left: calc(100vw + 200px); /* Start off-screen to the right */
  transform: translateY(-50%) scaleX(-1); /* Flip horizontally */
}

.nyan-cat-container.right-to-left.fly-in {
  left: -200px; /* End off-screen to the left */
}

.nyan-cat-image {
  width: 150px; /* Adjust size as needed */
  height: auto;
}